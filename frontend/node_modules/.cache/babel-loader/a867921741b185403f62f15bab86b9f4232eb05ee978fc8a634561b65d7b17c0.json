{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hirthic\\\\Desktop\\\\JPA-Data-Confirmation-System\\\\frontend\\\\src\\\\SubmissionApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SubmissionApp() {\n  _s();\n  const [systemsData, setSystemsData] = useState({});\n  const [flowType, setFlowType] = useState('Outbound');\n  const [system, setSystem] = useState('');\n  const [module, setModule] = useState('');\n  const [availableModules, setAvailableModules] = useState([]);\n  const [availableElements, setAvailableElements] = useState([]);\n  const [elements, setElements] = useState([]);\n  const [remarkInput, setRemarkInput] = useState('');\n  const allowedSystems = {\n    Outbound: ['Sistem Pengurusan Meja Bantuan (SPMB)'],\n    Inbound: ['Sistem Pengurusan Meja Bantuan (SPMB)']\n  };\n  const [remarks, setRemarks] = useState([]);\n  useEffect(() => {\n    // 🔄 Try backend first\n    axios.get('http://localhost:3001/systems').then(res => {\n      setSystemsData(res.data);\n      const flows = Object.keys(res.data);\n      setFlowType(flows[0]);\n    }).catch(() => {\n      // 🔁 Fallback to public/systems.json\n      fetch('/systems.json').then(res => res.json()).then(data => {\n        setSystemsData(data);\n        const flows = Object.keys(data);\n        setFlowType(flows[0]);\n      }).catch(err => console.error(\"❌ Failed to load systems.json:\", err));\n    });\n  }, []);\n  useEffect(() => {\n    if (!systemsData[flowType]) return;\n    const sysList = Object.keys(systemsData[flowType]).filter(sys => {\n      var _allowedSystems$flowT;\n      return (_allowedSystems$flowT = allowedSystems[flowType]) === null || _allowedSystems$flowT === void 0 ? void 0 : _allowedSystems$flowT.includes(sys);\n    });\n    if (!sysList.includes(system)) {\n      setSystem(sysList[0] || '');\n    }\n  }, [flowType, systemsData, system]);\n  useEffect(() => {\n    var _systemsData$flowType;\n    if (!system || !((_systemsData$flowType = systemsData[flowType]) !== null && _systemsData$flowType !== void 0 && _systemsData$flowType[system])) return;\n    console.log(\"🔍 Available modules for\", system, \"→\", Object.keys(systemsData[flowType][system]));\n    const moduleEntries = Object.entries(systemsData[flowType][system]);\n\n    // Remove invisible whitespace from module names\n    const filteredModules = moduleEntries.map(([modName]) => modName.trim());\n    setAvailableModules(filteredModules);\n\n    // Ensure selected module is valid\n    if (!filteredModules.includes(module.trim())) {\n      setModule('');\n    }\n  }, [system, flowType, systemsData]);\n  useEffect(() => {\n    var _systemsData$flowType2, _selectedModule$;\n    if (!module) return;\n    const normalizedModules = Object.entries((systemsData === null || systemsData === void 0 ? void 0 : (_systemsData$flowType2 = systemsData[flowType]) === null || _systemsData$flowType2 === void 0 ? void 0 : _systemsData$flowType2[system]) || {});\n    const selectedModule = normalizedModules.find(([name]) => name.trim() === module.trim());\n    const modData = (selectedModule === null || selectedModule === void 0 ? void 0 : (_selectedModule$ = selectedModule[1]) === null || _selectedModule$ === void 0 ? void 0 : _selectedModule$.elements) || [];\n    console.log(\"🧪 module:\", module);\n    console.log(\"🧪 elements:\", modData);\n    setAvailableElements(modData);\n    setElements([]);\n  }, [module, system, flowType, systemsData]);\n  const flattenOutboundElements = confirmed => {\n    if (!availableElements || availableElements.length === 0) return [];\n    if (typeof availableElements[0] === 'object' && availableElements[0].group) {\n      return availableElements.flatMap(group => group.fields.filter(field => elements.includes(field)).map(name => ({\n        name,\n        confirmed\n      })));\n    } else {\n      return elements.map(name => ({\n        name,\n        confirmed\n      }));\n    }\n  };\n  const handleSelect = value => {\n    if (flowType === 'Outbound') {\n      setElements(prev => prev.includes(value) ? prev.filter(el => el !== value) : [...prev, value]);\n    } else {\n      setElements(prev => {\n        const exist = prev.find(el => el.name === value);\n        return exist ? prev.filter(el => el.name !== value) : [...prev, {\n          name: value,\n          confirmed: true\n        }];\n      });\n    }\n  };\n  const addRemark = () => {\n    if (remarkInput.trim() !== '') {\n      setRemarks([...remarks, remarkInput.trim()]);\n      setRemarkInput('');\n    }\n  };\n  const submit = confirmed => {\n    if (remarkInput) {\n      alert(\"Please add remark first.\");\n      return;\n    }\n    if (!elements || elements.length === 0) {\n      alert(\"Please select at least one data element before submitting.\");\n      return;\n    }\n    const payload = {\n      flowType,\n      system,\n      module,\n      elements: flowType === 'Outbound' ? flattenOutboundElements(confirmed) : elements.map(e => ({\n        name: e.name,\n        confirmed\n      })),\n      remarks: remarks.join(\"; \")\n    };\n    axios.post('http://localhost:3001/submit', payload).then(() => {\n      alert('Submitted!');\n      setElements([]);\n      setRemarks([]);\n      setRemarkInput('');\n    }).catch(err => {\n      console.error('Submission failed:', err);\n      alert('Something went wrong while submitting.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"confirmation-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"nav-title\",\n      children: \"JPA Data Confirmation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Data Flow:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: flowType,\n        onChange: e => setFlowType(e.target.value),\n        children: Object.keys(systemsData).map(flow => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: flow\n        }, flow, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Sistem Pilihan:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: system,\n        onChange: e => setSystem(e.target.value),\n        children: Object.keys(systemsData[flowType] || {}).filter(sys => {\n          var _allowedSystems$flowT2;\n          return (_allowedSystems$flowT2 = allowedSystems[flowType]) === null || _allowedSystems$flowT2 === void 0 ? void 0 : _allowedSystems$flowT2.includes(sys);\n        }).map(sys => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: sys\n        }, sys, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Modul:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: module,\n        onChange: e => setModule(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Pilih Modul --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 3\n        }, this), availableModules.map(mod => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: mod,\n          children: mod\n        }, mod, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 5\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Data Elements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"element-section\",\n      children: Array.isArray(availableElements) && availableElements.map((item, idx) => {\n        // ✅ Case 1: Grouped elements (object with group and fields)\n        if (typeof item === 'object' && item.group && Array.isArray(item.fields)) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: item.group\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 11\n            }, this), item.fields.map((field, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"checkbox-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: flowType === 'Inbound' ? elements.some(e => e.name === field) : elements.includes(field),\n                onChange: () => handleSelect(field)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 15\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 13\n            }, this))]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 9\n          }, this);\n        }\n\n        // ✅ Case 2: Flat elements (simple strings)\n        if (typeof item === 'string') {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: elements.includes(item),\n              onChange: () => handleSelect(item)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 11\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 9\n          }, this);\n        }\n\n        // ❌ Case 3: Unrecognized structure — skip rendering\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Remarks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"remarks-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: remarkInput,\n          onChange: e => setRemarkInput(e.target.value),\n          placeholder: \"Add remark...\",\n          className: \"remarks-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addRemark,\n          className: \"add-remark-btn\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"remarks-list\",\n        children: remarks.map((r, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"remark-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: r\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setRemarks(remarks.filter((_, i) => i !== idx)),\n            children: \"\\u274C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => submit(true),\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => submit(false),\n        children: \"Not Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n_s(SubmissionApp, \"SELpwXVfxhgxJ0J2f58HSBAVqoM=\");\n_c = SubmissionApp;\nvar _c;\n$RefreshReg$(_c, \"SubmissionApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","SubmissionApp","_s","systemsData","setSystemsData","flowType","setFlowType","system","setSystem","module","setModule","availableModules","setAvailableModules","availableElements","setAvailableElements","elements","setElements","remarkInput","setRemarkInput","allowedSystems","Outbound","Inbound","remarks","setRemarks","get","then","res","data","flows","Object","keys","catch","fetch","json","err","console","error","sysList","filter","sys","_allowedSystems$flowT","includes","_systemsData$flowType","log","moduleEntries","entries","filteredModules","map","modName","trim","_systemsData$flowType2","_selectedModule$","normalizedModules","selectedModule","find","name","modData","flattenOutboundElements","confirmed","length","group","flatMap","fields","field","handleSelect","value","prev","el","exist","addRemark","submit","alert","payload","e","join","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","flow","_allowedSystems$flowT2","mod","Array","isArray","item","idx","i","type","checked","some","placeholder","onClick","r","_","_c","$RefreshReg$"],"sources":["C:/Users/Hirthic/Desktop/JPA-Data-Confirmation-System/frontend/src/SubmissionApp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nexport default function SubmissionApp() {\r\n  const [systemsData, setSystemsData] = useState({});\r\n  const [flowType, setFlowType] = useState('Outbound');\r\n  const [system, setSystem] = useState('');\r\n  const [module, setModule] = useState('');\r\n  const [availableModules, setAvailableModules] = useState([]);\r\n  const [availableElements, setAvailableElements] = useState([]);\r\n  const [elements, setElements] = useState([]);\r\n  const [remarkInput, setRemarkInput] = useState('');\r\n  const allowedSystems = {\r\n  Outbound: ['Sistem Pengurusan Meja Bantuan (SPMB)'],\r\n  Inbound: ['Sistem Pengurusan Meja Bantuan (SPMB)']\r\n};\r\n  const [remarks, setRemarks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // 🔄 Try backend first\r\n    axios.get('http://localhost:3001/systems')\r\n      .then(res => {\r\n        setSystemsData(res.data);\r\n        const flows = Object.keys(res.data);\r\n        setFlowType(flows[0]);\r\n      })\r\n      .catch(() => {\r\n        // 🔁 Fallback to public/systems.json\r\n        fetch('/systems.json')\r\n          .then(res => res.json())\r\n          .then(data => {\r\n            setSystemsData(data);\r\n            const flows = Object.keys(data);\r\n            setFlowType(flows[0]);\r\n          })\r\n          .catch(err => console.error(\"❌ Failed to load systems.json:\", err));\r\n      });\r\n  }, []);\r\n\r\nuseEffect(() => {\r\n  if (!systemsData[flowType]) return;\r\n  const sysList = Object.keys(systemsData[flowType])\r\n    .filter(sys => allowedSystems[flowType]?.includes(sys));\r\n  if (!sysList.includes(system)) {\r\n    setSystem(sysList[0] || '');\r\n  }\r\n}, [flowType, systemsData, system]);\r\n\r\n\r\nuseEffect(() => {\r\n  if (!system || !systemsData[flowType]?.[system]) return;\r\n console.log(\"🔍 Available modules for\", system, \"→\", Object.keys(systemsData[flowType][system]));\r\n  const moduleEntries = Object.entries(systemsData[flowType][system]);\r\n\r\n// Remove invisible whitespace from module names\r\nconst filteredModules = moduleEntries.map(([modName]) => modName.trim());\r\n\r\nsetAvailableModules(filteredModules);\r\n\r\n// Ensure selected module is valid\r\nif (!filteredModules.includes(module.trim())) {\r\n  setModule('');\r\n}\r\n}, [system, flowType, systemsData]);\r\n\r\n\r\n\r\nuseEffect(() => {\r\n  if (!module) return;\r\n  const normalizedModules = Object.entries(systemsData?.[flowType]?.[system] || {});\r\n  const selectedModule = normalizedModules.find(([name]) => name.trim() === module.trim());\r\n  const modData = selectedModule?.[1]?.elements || [];\r\n  console.log(\"🧪 module:\", module);\r\n  console.log(\"🧪 elements:\", modData);\r\n  setAvailableElements(modData);\r\n  setElements([]);\r\n}, [module, system, flowType, systemsData]);\r\n\r\n\r\nconst flattenOutboundElements = (confirmed) => {\r\n  if (!availableElements || availableElements.length === 0) return [];\r\n\r\n  if (typeof availableElements[0] === 'object' && availableElements[0].group) {\r\n    return availableElements.flatMap(group =>\r\n      group.fields.filter(field => elements.includes(field))\r\n                  .map(name => ({ name, confirmed }))\r\n    );\r\n  } else {\r\n    return elements.map(name => ({ name, confirmed }));\r\n  }\r\n};\r\n\r\n\r\n  const handleSelect = (value) => {\r\n    if (flowType === 'Outbound') {\r\n      setElements(prev => prev.includes(value) ? prev.filter(el => el !== value) : [...prev, value]);\r\n    } else {\r\n      setElements(prev => {\r\n        const exist = prev.find(el => el.name === value);\r\n        return exist\r\n          ? prev.filter(el => el.name !== value)\r\n          : [...prev, { name: value, confirmed: true }];\r\n      });\r\n    }\r\n  };\r\n\r\n  const addRemark = () => {\r\n    if (remarkInput.trim() !== '') {\r\n      setRemarks([...remarks, remarkInput.trim()]);\r\n      setRemarkInput('');\r\n    }\r\n  };\r\n\r\nconst submit = (confirmed) => {\r\n  if (remarkInput) {\r\n    alert(\"Please add remark first.\");\r\n    return;\r\n  }\r\n  if (!elements || elements.length === 0) {\r\n    alert(\"Please select at least one data element before submitting.\");\r\n    return;\r\n  }\r\n\r\n  const payload = {\r\n    flowType,\r\n    system,\r\n    module,\r\n    elements: flowType === 'Outbound'\r\n      ? flattenOutboundElements(confirmed)\r\n      : elements.map(e => ({ name: e.name, confirmed })),\r\n    remarks: remarks.join(\"; \")\r\n  };\r\n\r\n  axios.post('http://localhost:3001/submit', payload)\r\n    .then(() => {\r\n      alert('Submitted!');\r\n      setElements([]);\r\n      setRemarks([]);\r\n      setRemarkInput('');\r\n    }).catch(err => {\r\n      console.error('Submission failed:', err);\r\n      alert('Something went wrong while submitting.');\r\n    });\r\n};\r\n\r\n\r\n  return (\r\n    <div className=\"confirmation-section\">\r\n      <h1 className=\"nav-title\">JPA Data Confirmation</h1>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Data Flow:</label>\r\n        <select value={flowType} onChange={e => setFlowType(e.target.value)}>\r\n          {Object.keys(systemsData).map(flow => (\r\n            <option key={flow}>{flow}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Sistem Pilihan:</label>\r\n<select value={system} onChange={e => setSystem(e.target.value)}>\r\n  {Object.keys(systemsData[flowType] || {})\r\n    .filter(sys => allowedSystems[flowType]?.includes(sys))\r\n    .map(sys => (\r\n      <option key={sys}>{sys}</option>\r\n    ))}\r\n</select>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Modul:</label>\r\n        <select value={module} onChange={e => setModule(e.target.value)}>\r\n  <option value=\"\">-- Pilih Modul --</option>\r\n  {availableModules.map(mod => (\r\n    <option key={mod} value={mod}>{mod}</option>\r\n  ))}\r\n</select>\r\n      </div>\r\n\r\n      <h3>Data Elements</h3>\r\n<div className=\"element-section\">\r\n  {Array.isArray(availableElements) && availableElements.map((item, idx) => {\r\n    // ✅ Case 1: Grouped elements (object with group and fields)\r\n    if (typeof item === 'object' && item.group && Array.isArray(item.fields)) {\r\n      return (\r\n        <div key={idx} className=\"group\">\r\n          <h4>{item.group}</h4>\r\n          {item.fields.map((field, i) => (\r\n            <div key={i} className=\"checkbox-item\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={\r\n                  flowType === 'Inbound'\r\n                    ? elements.some(e => e.name === field)\r\n                    : elements.includes(field)\r\n                }\r\n                onChange={() => handleSelect(field)}\r\n              />\r\n              <label>{field}</label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // ✅ Case 2: Flat elements (simple strings)\r\n    if (typeof item === 'string') {\r\n      return (\r\n        <div key={idx} className=\"checkbox-item\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={elements.includes(item)}\r\n            onChange={() => handleSelect(item)}\r\n          />\r\n          <label>{item}</label>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // ❌ Case 3: Unrecognized structure — skip rendering\r\n    return null;\r\n  })}\r\n</div>\r\n\r\n\r\n      <div className=\"form-group\">\r\n        <label>Remarks:</label>\r\n        <div className=\"remarks-container\">\r\n          <input\r\n            type=\"text\"\r\n            value={remarkInput}\r\n            onChange={(e) => setRemarkInput(e.target.value)}\r\n            placeholder=\"Add remark...\"\r\n            className=\"remarks-input\"\r\n          />\r\n          <button onClick={addRemark} className=\"add-remark-btn\">+</button>\r\n        </div>\r\n        <div className=\"remarks-list\">\r\n          {remarks.map((r, idx) => (\r\n            <div key={idx} className=\"remark-item\">\r\n              <span>{r}</span>\r\n              <button onClick={() => setRemarks(remarks.filter((_, i) => i !== idx))}>❌</button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"button-group\">\r\n        <button onClick={() => submit(true)}>Confirm</button>\r\n        <button onClick={() => submit(false)}>Not Confirm</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}