{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hirthic\\\\Desktop\\\\JPA-Data-Confirmation-System\\\\frontend\\\\src\\\\SubmissionApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { saveConfirmed } from './utils/confirmedStore';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SubmissionApp() {\n  _s();\n  const [systemsData, setSystemsData] = useState({});\n  const [flowType, setFlowType] = useState('Outbound');\n  const [system, setSystem] = useState('');\n  const [module, setModule] = useState('');\n  const [availableModules, setAvailableModules] = useState([]);\n  const [availableElements, setAvailableElements] = useState([]);\n  const [elements, setElements] = useState([]);\n  const [remarkInput, setRemarkInput] = useState('');\n  const [newElementInput, setNewElementInput] = useState('');\n  const [remarks, setRemarks] = useState([]);\n  const showNotConfirmButton = false;\n  const allowedSystems = {\n    Outbound: ['Sistem Pengurusan Meja Bantuan (SPMB)'],\n    Inbound: ['Sistem Pengurusan Meja Bantuan (SPMB)']\n  };\n  const navigate = useNavigate();\n  useEffect(() => {\n    // 🔄 Try backend first\n    axios.get('http://localhost:3001/systems').then(res => {\n      setSystemsData(res.data);\n      const flows = Object.keys(res.data);\n      setFlowType(flows[0]);\n    }).catch(() => {\n      // 🔁 Fallback to public/systems.json\n      fetch('/systems.json').then(res => res.json()).then(data => {\n        setSystemsData(data);\n        const flows = Object.keys(data);\n        setFlowType(flows[0]);\n      }).catch(err => console.error(\"❌ Failed to load systems.json:\", err));\n    });\n  }, []);\n  useEffect(() => {\n    if (!systemsData[flowType]) return;\n    const sysList = Object.keys(systemsData[flowType]).filter(sys => {\n      var _allowedSystems$flowT;\n      return (_allowedSystems$flowT = allowedSystems[flowType]) === null || _allowedSystems$flowT === void 0 ? void 0 : _allowedSystems$flowT.includes(sys);\n    });\n    if (!sysList.includes(system)) {\n      setSystem(sysList[0] || '');\n    }\n  }, [flowType, systemsData, system]);\n  useEffect(() => {\n    var _systemsData$flowType;\n    if (!system || !((_systemsData$flowType = systemsData[flowType]) !== null && _systemsData$flowType !== void 0 && _systemsData$flowType[system])) return;\n    console.log(\"🔍 Available modules for\", system, \"→\", Object.keys(systemsData[flowType][system]));\n    const moduleEntries = Object.entries(systemsData[flowType][system]);\n\n    // Remove invisible whitespace from module names\n    const filteredModules = moduleEntries.map(([modName]) => modName.trim());\n    setAvailableModules(filteredModules);\n\n    // Ensure selected module is valid\n    if (!filteredModules.includes(module.trim())) {\n      setModule('');\n    }\n  }, [system, flowType, systemsData]);\n  useEffect(() => {\n    var _systemsData$flowType2, _selectedModule$;\n    if (!module) return;\n    const normalizedModules = Object.entries((systemsData === null || systemsData === void 0 ? void 0 : (_systemsData$flowType2 = systemsData[flowType]) === null || _systemsData$flowType2 === void 0 ? void 0 : _systemsData$flowType2[system]) || {});\n    const selectedModule = normalizedModules.find(([name]) => name.trim() === module.trim());\n    const modData = (selectedModule === null || selectedModule === void 0 ? void 0 : (_selectedModule$ = selectedModule[1]) === null || _selectedModule$ === void 0 ? void 0 : _selectedModule$.elements) || [];\n    console.log(\"🧪 module:\", module);\n    console.log(\"🧪 elements:\", modData);\n    setAvailableElements(modData);\n    setElements(prev => prev.filter(e => {\n      const name = typeof e === 'string' ? e : e.name;\n      return modData.includes(name);\n    }));\n  }, [module, system, flowType, systemsData]);\n  const flattenOutboundElements = confirmed => {\n    if (!availableElements || availableElements.length === 0) return [];\n    if (typeof availableElements[0] === 'object' && availableElements[0].group) {\n      return availableElements.flatMap(group => group.fields.filter(field => elements.includes(field)).map(name => ({\n        name,\n        confirmed\n      })));\n    } else {\n      return elements.map(name => ({\n        name,\n        confirmed\n      }));\n    }\n  };\n  const handleSelect = value => {\n    if (flowType === 'Outbound') {\n      setElements(prev => prev.includes(value) ? prev.filter(el => el !== value) : [...prev, value]);\n    } else {\n      setElements(prev => {\n        const exist = prev.find(el => el.name === value);\n        return exist ? prev.filter(el => el.name !== value) : [...prev, {\n          name: value,\n          confirmed: true\n        }];\n      });\n    }\n  };\n  const addRemark = () => {\n    if (remarkInput.trim()) {\n      setRemarks(prev => [...prev, remarkInput.trim()]);\n      setRemarkInput('');\n    }\n  };\n  // --- NEW ---\n  const addDataElement = () => {\n    const label = newElementInput.trim();\n    if (!label) return;\n\n    // simple confirm-dialog; replace with a custom modal if you prefer\n    if (!window.confirm(`Add “${label}” to this module?`)) return;\n\n    // Append to list (avoids duplicates)\n    setAvailableElements(prev => prev.includes(label) ? prev : [...prev, label]);\n\n    // Tick it automatically for Inbound\n    setElements(prev => {\n      const exists = prev.find(e => e.name === label);\n      return exists ? prev : [...prev, {\n        name: label,\n        confirmed: true\n      }];\n    });\n    setNewElementInput(''); // clear the textbox\n  };\n  const submit = confirmed => {\n    if (remarkInput) {\n      alert(\"Please add remark first.\");\n      return;\n    }\n    if (!elements || elements.length === 0) {\n      alert(\"Please select at least one data element before submitting.\");\n      return;\n    }\n    const payload = {\n      flowType,\n      system,\n      module,\n      elements: flowType === 'Outbound' ? flattenOutboundElements(confirmed) : elements.map(e => ({\n        name: e.name,\n        confirmed\n      })),\n      // Only Outbound still sends remarks\n      ...(flowType === 'Outbound' && {\n        remarks: remarks.join('; ')\n      })\n    };\n    axios.post('http://localhost:3001/submit', payload).then(() => {\n      console.log(\"✅ Submitted payload:\", payload);\n      if (flowType === 'Inbound') {\n        const confirmedNames = payload.elements.map(e => e.name);\n        saveConfirmed(system, module, confirmedNames);\n        navigate('/requirement');\n      }\n      alert('Submitted!');\n      setElements([]);\n      if (flowType === 'Outbound') {\n        setRemarks([]);\n        setRemarkInput('');\n      }\n    }).catch(err => {\n      console.error('Submission failed:', err);\n      alert('Something went wrong while submitting.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"confirmation-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"nav-title\",\n      children: \"JPA Data Confirmation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Data Flow:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: flowType,\n        onChange: e => setFlowType(e.target.value),\n        children: Object.keys(systemsData).map(flow => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: flow\n        }, flow, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Sistem Pilihan:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: system,\n        onChange: e => setSystem(e.target.value),\n        children: Object.keys(systemsData[flowType] || {}).filter(sys => {\n          var _allowedSystems$flowT2;\n          return (_allowedSystems$flowT2 = allowedSystems[flowType]) === null || _allowedSystems$flowT2 === void 0 ? void 0 : _allowedSystems$flowT2.includes(sys);\n        }).map(sys => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: sys\n        }, sys, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Modul:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: module,\n        onChange: e => setModule(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Pilih Modul --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 3\n        }, this), availableModules.map(mod => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: mod,\n          children: mod\n        }, mod, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 5\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Data Elements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"element-section\",\n      children: Array.isArray(availableElements) && availableElements.map((item, idx) => {\n        // ✅ Case 1: Grouped elements (object with group and fields)\n        if (typeof item === 'object' && item.group && Array.isArray(item.fields)) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: item.group\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 11\n            }, this), item.fields.map((field, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"checkbox-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: flowType === 'Inbound' ? elements.some(e => e.name === field) : elements.includes(field),\n                onChange: () => handleSelect(field)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 15\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 13\n            }, this))]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 9\n          }, this);\n        }\n\n        // ✅ Case 2: Flat elements (simple strings)\n        if (typeof item === 'string') {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: flowType === 'Inbound' ? elements.some(e => e.name === item) : elements.includes(item),\n              onChange: () => handleSelect(item)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 11\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 9\n          }, this);\n        }\n\n        // ❌ Case 3: Unrecognized structure — skip rendering\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 1\n    }, this), flowType === 'Outbound' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Remarks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"remarks-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: remarkInput,\n          onChange: e => setRemarkInput(e.target.value),\n          placeholder: \"Add remark...\",\n          className: \"remarks-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addRemark,\n          className: \"add-remark-btn\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"remarks-list\",\n        children: remarks.map((r, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"remark-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: r\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setRemarks(remarks.filter((_, i) => i !== idx)),\n            children: \"\\u274C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 11\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 3\n    }, this), flowType === 'Inbound' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Add Data Element:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"remarks-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newElementInput,\n          onChange: e => setNewElementInput(e.target.value),\n          placeholder: \"e.g. KPI Score\",\n          className: \"remarks-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addDataElement,\n          className: \"add-remark-btn\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => submit(true),\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), showNotConfirmButton && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => submit(false),\n        children: \"Not Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n}\n_s(SubmissionApp, \"nJPriEil7Rs7LpZxJp3uNIgesZM=\", false, function () {\n  return [useNavigate];\n});\n_c = SubmissionApp;\nvar _c;\n$RefreshReg$(_c, \"SubmissionApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","saveConfirmed","useNavigate","jsxDEV","_jsxDEV","SubmissionApp","_s","systemsData","setSystemsData","flowType","setFlowType","system","setSystem","module","setModule","availableModules","setAvailableModules","availableElements","setAvailableElements","elements","setElements","remarkInput","setRemarkInput","newElementInput","setNewElementInput","remarks","setRemarks","showNotConfirmButton","allowedSystems","Outbound","Inbound","navigate","get","then","res","data","flows","Object","keys","catch","fetch","json","err","console","error","sysList","filter","sys","_allowedSystems$flowT","includes","_systemsData$flowType","log","moduleEntries","entries","filteredModules","map","modName","trim","_systemsData$flowType2","_selectedModule$","normalizedModules","selectedModule","find","name","modData","prev","e","flattenOutboundElements","confirmed","length","group","flatMap","fields","field","handleSelect","value","el","exist","addRemark","addDataElement","label","window","confirm","exists","submit","alert","payload","join","post","confirmedNames","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","flow","_allowedSystems$flowT2","mod","Array","isArray","item","idx","i","type","checked","some","placeholder","onClick","r","_","_c","$RefreshReg$"],"sources":["C:/Users/Hirthic/Desktop/JPA-Data-Confirmation-System/frontend/src/SubmissionApp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport { saveConfirmed } from './utils/confirmedStore';\r\nimport { useNavigate } from 'react-router-dom'; \r\n\r\nexport default function SubmissionApp() {\r\n  const [systemsData, setSystemsData] = useState({});\r\n  const [flowType, setFlowType] = useState('Outbound');\r\n  const [system, setSystem] = useState('');\r\n  const [module, setModule] = useState('');\r\n  const [availableModules, setAvailableModules] = useState([]);\r\n  const [availableElements, setAvailableElements] = useState([]);\r\n  const [elements, setElements] = useState([]);\r\n  const [remarkInput, setRemarkInput] = useState('');\r\n  const [newElementInput, setNewElementInput] = useState('');\r\n  const [remarks, setRemarks] = useState([]);\r\n  const showNotConfirmButton = false;\r\n  const allowedSystems = {\r\n  Outbound: ['Sistem Pengurusan Meja Bantuan (SPMB)'],\r\n  Inbound: ['Sistem Pengurusan Meja Bantuan (SPMB)']\r\n};\r\n\r\n \r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // 🔄 Try backend first\r\n    axios.get('http://localhost:3001/systems')\r\n      .then(res => {\r\n        setSystemsData(res.data);\r\n        const flows = Object.keys(res.data);\r\n        setFlowType(flows[0]);\r\n      })\r\n      .catch(() => {\r\n        // 🔁 Fallback to public/systems.json\r\n        fetch('/systems.json')\r\n          .then(res => res.json())\r\n          .then(data => {\r\n            setSystemsData(data);\r\n            const flows = Object.keys(data);\r\n            setFlowType(flows[0]);\r\n          })\r\n          .catch(err => console.error(\"❌ Failed to load systems.json:\", err));\r\n      });\r\n  }, []);\r\n\r\nuseEffect(() => {\r\n  if (!systemsData[flowType]) return;\r\n  const sysList = Object.keys(systemsData[flowType])\r\n    .filter(sys => allowedSystems[flowType]?.includes(sys));\r\n  if (!sysList.includes(system)) {\r\n    setSystem(sysList[0] || '');\r\n  }\r\n}, [flowType, systemsData, system]);\r\n\r\n\r\nuseEffect(() => {\r\n  if (!system || !systemsData[flowType]?.[system]) return;\r\n console.log(\"🔍 Available modules for\", system, \"→\", Object.keys(systemsData[flowType][system]));\r\n  const moduleEntries = Object.entries(systemsData[flowType][system]);\r\n\r\n// Remove invisible whitespace from module names\r\nconst filteredModules = moduleEntries.map(([modName]) => modName.trim());\r\n\r\nsetAvailableModules(filteredModules);\r\n\r\n// Ensure selected module is valid\r\nif (!filteredModules.includes(module.trim())) {\r\n  setModule('');\r\n}\r\n}, [system, flowType, systemsData]);\r\n\r\n\r\n\r\nuseEffect(() => {\r\n  if (!module) return;\r\n  const normalizedModules = Object.entries(systemsData?.[flowType]?.[system] || {});\r\n  const selectedModule = normalizedModules.find(([name]) => name.trim() === module.trim());\r\n  const modData = selectedModule?.[1]?.elements || [];\r\n  console.log(\"🧪 module:\", module);\r\n  console.log(\"🧪 elements:\", modData);\r\n  setAvailableElements(modData);\r\n  setElements(prev =>\r\n    prev.filter(e => {\r\n      const name = typeof e === 'string' ? e : e.name;\r\n      return modData.includes(name);\r\n    })\r\n  );\r\n}, [module, system, flowType, systemsData]);\r\n\r\n\r\nconst flattenOutboundElements = (confirmed) => {\r\n  if (!availableElements || availableElements.length === 0) return [];\r\n\r\n  if (typeof availableElements[0] === 'object' && availableElements[0].group) {\r\n    return availableElements.flatMap(group =>\r\n      group.fields.filter(field => elements.includes(field))\r\n                  .map(name => ({ name, confirmed }))\r\n    );\r\n  } else {\r\n    return elements.map(name => ({ name, confirmed }));\r\n  }\r\n};\r\n\r\n\r\n  const handleSelect = (value) => {\r\n    if (flowType === 'Outbound') {\r\n      setElements(prev => prev.includes(value) ? prev.filter(el => el !== value) : [...prev, value]);\r\n    } else {\r\n      setElements(prev => {\r\n        const exist = prev.find(el => el.name === value);\r\n        return exist\r\n          ? prev.filter(el => el.name !== value)\r\n          : [...prev, { name: value, confirmed: true }];\r\n      });\r\n    }\r\n  };\r\n\r\n  const addRemark = () => {\r\n    if (remarkInput.trim()) {\r\n      setRemarks(prev => [...prev, remarkInput.trim()]);\r\n      setRemarkInput('');\r\n    }\r\n  };\r\n// --- NEW ---\r\nconst addDataElement = () => {\r\n  const label = newElementInput.trim();\r\n  if (!label) return;\r\n\r\n  // simple confirm-dialog; replace with a custom modal if you prefer\r\n  if (!window.confirm(`Add “${label}” to this module?`)) return;\r\n\r\n  // Append to list (avoids duplicates)\r\n  setAvailableElements(prev =>\r\n    prev.includes(label) ? prev : [...prev, label]\r\n  );\r\n\r\n  // Tick it automatically for Inbound\r\n  setElements(prev => {\r\n    const exists = prev.find(e => e.name === label);\r\n    return exists ? prev : [...prev, { name: label, confirmed: true }];\r\n  });\r\n\r\n  setNewElementInput('');   // clear the textbox\r\n};\r\n\r\nconst submit = (confirmed) => {\r\n  if (remarkInput) {\r\n    alert(\"Please add remark first.\");\r\n    return;\r\n  }\r\n  if (!elements || elements.length === 0) {\r\n    alert(\"Please select at least one data element before submitting.\");\r\n    return;\r\n  }\r\n\r\nconst payload = {\r\n  flowType,\r\n  system,\r\n  module,\r\n  elements: flowType === 'Outbound'\r\n    ? flattenOutboundElements(confirmed)\r\n    : elements.map(e => ({ name: e.name, confirmed })),\r\n  // Only Outbound still sends remarks\r\n  ...(flowType === 'Outbound' && { remarks: remarks.join('; ') })\r\n};\r\n\r\n\r\n  axios.post('http://localhost:3001/submit', payload)\r\n  \r\n    .then(() => {\r\n      console.log(\"✅ Submitted payload:\", payload);\r\n       if (flowType === 'Inbound') {\r\n      const confirmedNames = payload.elements.map(e => e.name);\r\n      saveConfirmed(system, module, confirmedNames);\r\n      navigate('/requirement');\r\n    }\r\n      alert('Submitted!');\r\n      setElements([]);\r\n     if (flowType === 'Outbound') {\r\n        setRemarks([]);\r\n        setRemarkInput('');\r\n      }\r\n    }).catch(err => {\r\n      console.error('Submission failed:', err);\r\n      alert('Something went wrong while submitting.');\r\n    });\r\n};\r\n\r\n\r\n  return (\r\n    <div className=\"confirmation-section\">\r\n      <h1 className=\"nav-title\">JPA Data Confirmation</h1>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Data Flow:</label>\r\n        <select value={flowType} onChange={e => setFlowType(e.target.value)}>\r\n          {Object.keys(systemsData).map(flow => (\r\n            <option key={flow}>{flow}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Sistem Pilihan:</label>\r\n<select value={system} onChange={e => setSystem(e.target.value)}>\r\n  {Object.keys(systemsData[flowType] || {})\r\n    .filter(sys => allowedSystems[flowType]?.includes(sys))\r\n    .map(sys => (\r\n      <option key={sys}>{sys}</option>\r\n    ))}\r\n</select>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Modul:</label>\r\n        <select value={module} onChange={e => setModule(e.target.value)}>\r\n  <option value=\"\">-- Pilih Modul --</option>\r\n  {availableModules.map(mod => (\r\n    <option key={mod} value={mod}>{mod}</option>\r\n  ))}\r\n</select>\r\n      </div>\r\n\r\n      <h3>Data Elements</h3>\r\n<div className=\"element-section\">\r\n  {Array.isArray(availableElements) && availableElements.map((item, idx) => {\r\n    // ✅ Case 1: Grouped elements (object with group and fields)\r\n    if (typeof item === 'object' && item.group && Array.isArray(item.fields)) {\r\n      return (\r\n        <div key={idx} className=\"group\">\r\n          <h4>{item.group}</h4>\r\n          {item.fields.map((field, i) => (\r\n            <div key={i} className=\"checkbox-item\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={\r\n                  flowType === 'Inbound'\r\n                    ? elements.some(e => e.name === field)\r\n                    : elements.includes(field)\r\n                }\r\n                onChange={() => handleSelect(field)}\r\n              />\r\n              <label>{field}</label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // ✅ Case 2: Flat elements (simple strings)\r\n    if (typeof item === 'string') {\r\n      return (\r\n        <div key={idx} className=\"checkbox-item\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={\r\n  flowType === 'Inbound'\r\n    ? elements.some(e => e.name === item)\r\n    : elements.includes(item)\r\n}\r\n\r\n            onChange={() => handleSelect(item)}\r\n          />\r\n          <label>{item}</label>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // ❌ Case 3: Unrecognized structure — skip rendering\r\n    return null;\r\n  })}\r\n</div>\r\n       \r\n{/* -------- Dynamic bottom input area -------- */}\r\n{flowType === 'Outbound' && (\r\n  <div className=\"form-group\">\r\n    <label>Remarks:</label>\r\n    <div className=\"remarks-container\">\r\n      <input\r\n        type=\"text\"\r\n        value={remarkInput}\r\n        onChange={e => setRemarkInput(e.target.value)}\r\n        placeholder=\"Add remark...\"\r\n        className=\"remarks-input\"\r\n      />\r\n      <button onClick={addRemark} className=\"add-remark-btn\">+</button>\r\n    </div>\r\n    <div className=\"remarks-list\">\r\n      {remarks.map((r, idx) => (\r\n        <div key={idx} className=\"remark-item\">\r\n          <span>{r}</span>\r\n          <button onClick={() => setRemarks(remarks.filter((_, i) => i !== idx))}>\r\n            ❌\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n)}\r\n\r\n{flowType === 'Inbound' && (\r\n  <div className=\"form-group\">\r\n    <label>Add Data Element:</label>\r\n    <div className=\"remarks-container\">\r\n      <input\r\n        type=\"text\"\r\n        value={newElementInput}\r\n        onChange={e => setNewElementInput(e.target.value)}\r\n        placeholder=\"e.g. KPI Score\"\r\n        className=\"remarks-input\"\r\n      />\r\n      <button onClick={addDataElement} className=\"add-remark-btn\">+</button>\r\n    </div>\r\n  </div>\r\n)}\r\n\r\n\r\n      <div className=\"button-group\">\r\n        <button onClick={() => submit(true)}>Confirm</button>\r\n        {showNotConfirmButton && (\r\n    <button onClick={() => submit(false)}>Not Confirm</button>\r\n  )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}